**我所做的工作**

2021年2月

在上大学之前，我除了学业之外主要专注于两件事：写作和编程。我不是写散文。我写的是那时初学者应该写的东西，现在可能也还是这样：短篇小说。我的故事很糟糕。它们几乎没有情节，只是有强烈情感的角色，我想象这使它们看起来很深刻。

我尝试编写的第一个程序是在IBM 1401上，我们学区用它来进行当时所谓的“数据处理”。那是在九年级，所以我大概是13或14岁。学区的1401碰巧在我们初中的地下室，我的朋友Rich Draves和我得到了使用它的许可。那里就像一个迷你邦德反派的巢穴，所有这些外星机器——CPU、磁盘驱动器、打印机、卡片阅读器——都坐落在明亮的荧光灯下的抬高地板上。

我们使用的语言是Fortran的早期版本。你必须在打孔卡上键入程序，然后将它们堆叠在卡片阅读器中，按下按钮将程序加载到内存中并运行它。结果通常是在非常响亮的打印机上打印一些东西。

我对1401感到困惑。我不知道该怎么用它。而且回想起来，我本可以用它做很多事情。程序唯一的输入形式是存储在打孔卡上的数据，而我没有存储在打孔卡上的数据。唯一的其他选择是做一些不依赖任何输入的事情，比如计算π的近似值，但我的数学知识不足以做任何有趣的这类事情。所以，我对记不住我写过的任何程序并不感到惊讶，因为它们不可能做太多。我最清晰的记忆是我学到程序可能不会终止的那一刻，当我的一个程序没有终止时。在没有分时系统的机器上，这不仅是一个技术错误，也是一个社会错误，就像数据中心经理的表情所清楚表明的那样。

有了微型计算机，一切都变了。现在你可以有一台电脑就在你面前的桌子上，它可以在你运行时响应你的击键，而不仅仅是处理一堆打孔卡然后停止。[1]

我第一个拥有微型计算机的朋友是自己组装的。它是由Heathkit以套件形式出售的。我记得非常清楚，当我看着他坐在它前面，直接向计算机输入程序时，我感到多么印象深刻和羡慕。

在那些日子里，计算机很贵，直到1980年左右，经过我多年的唠叨，我才说服我父亲买了一台TRS-80。当时的黄金标准是Apple II，但TRS-80已经足够好了。那时我真正开始编程。我编写了简单的游戏，一个预测我的模型火箭能飞多高的程序，以及我父亲用来写至少一本书的文字处理器。内存中只有大约两页文本的空间，所以他一次写两页，然后打印出来，但这比打字机好多了。

尽管我喜欢编程，但我没有计划在大学里学习它。在大学里，我打算学习哲学，这听起来要强大得多。在我看来，与我天真的高中自我相比，它似乎是对最终真理的研究，相比之下，其他领域研究的东西只是领域知识。当我进入大学时，我发现其他领域占据了如此多的思想空间，以至于没有留下太多空间给这些所谓的最终真理。哲学似乎只剩下其他领域的人认为可以安全忽略的边缘情况。

18岁时，我无法用言语表达这一点。当时我所知道的就是我继续上哲学课程，它们一直很无聊。所以我决定转向人工智能。

在20世纪80年代中期，人工智能无处不在，但有两件事特别让我想要从事这项工作：海因莱因的一部名为《月亮是一个残酷的女主人》的小说，它以一个名为Mike的智能计算机为特色，以及一部PBS纪录片，展示了Terry Winograd使用SHRDLU。我没有尝试重读《月亮是一个残酷的女主人》，所以我不知道它有多经久不衰，但当我读到它时，我完全被它的世界所吸引。看来我们很快就要有Mike了，当我看到Winograd使用SHRDLU时，在我看来，这个时间最多也就是几年。你所要做的就是教SHRDLU更多的单词。

那时康奈尔大学没有人工智能课程，连研究生课程都没有，所以我开始尝试自学。这意味着学习Lisp，因为在那些日子里，Lisp被认为是人工智能的语言。当时的常用编程语言相当原始，程序员的想法也是如此。康奈尔大学默认的语言是一种名为PL/I的Pascal式语言，其他地方的情况也类似。学习Lisp迅速扩展了我对程序的概念，以至于多年后我才开始对新极限有所感觉。这更像是它；这就是我期望大学做的。它并没有像应该的那样在课堂上发生，但这没关系。在接下来的几年里我一直在努力。我知道我要做什么。

对于我的本科论文，我逆向工程了SHRDLU。我的天，我喜欢为那个程序工作。这是一段令人愉快的代码，但让它更加令人兴奋的是我的信念——现在很难想象，但在1985年并不独特——它已经在攀登智能的较低斜坡。

我进入了一个康奈尔大学的项目，它不让你选择专业。你可以上任何你喜欢的课程，选择任何你喜欢放在你的学位上的东西。我当然选择了“人工智能”。当我拿到实际的物理文凭时，我感到失望的是，引号被包括在内，这使得它们看起来像是讽刺引号。当时这让我烦恼，但现在它似乎有趣地准确，因为我即将发现的原因。

我申请了3所研究生院：麻省理工学院和耶鲁大学，当时以人工智能闻名，还有哈佛大学，我去过那里，因为Rich Draves去了那里，也是Bill Woods的家，他发明了我在我的SHRDLU克隆中使用的解析器类型。只有哈佛大学接受了我，所以我去了那里。

我不记得那一刻是什么时候发生的，或者是否有一个特定的时刻，但在研究生的第一年，我意识到，当时的人工智能实践是一场骗局。我的意思是，当一个程序被告知“狗坐在椅子上”时，将其翻译成某种正式的表示，并将其添加到它所知道的事物列表中的那种人工智能。

这些程序真正展示的是，有一种自然语言的子集是一种形式语言。但是一个非常合适的子集。很明显，它们所能做的与真正理解自然语言之间存在着不可逾越的鸿沟。事实上，这不仅仅是教SHRDLU更多单词的问题。那种用显式数据结构表示概念的人工智能方式行不通。它的破损确实像往常一样产生了许多机会，可以写论文讨论可以应用到它上面的各种补丁，但它永远不会给我们Mike。

所以我四处看看，看看我能从我的计划的残骸中挽救出什么，还有Lisp。我知道从经验中，Lisp本身是有趣的，不仅仅是因为它与人工智能的关联，尽管那是当时人们关心它的主要原因。所以我决定专注于Lisp。事实上，我决定写一本关于Lisp黑客的书。想想我刚开始写那本书时对Lisp黑客了解得多么少，真是吓人。但是没有什么比写一本关于某件事的书更能帮助你学习它了。那本书《论Lisp》，直到1993年才出版，但我在研究生院写了很多。

计算机科学是理论和系统两个部分之间的不稳定联盟。理论家证明事情，系统家构建东西。我想构建东西。我对理论有足够的尊重——事实上，我暗中怀疑它比另一半更令人钦佩——但构建东西似乎更令人兴奋。

然而，系统工作的问题是它不会持久。你今天写的任何程序，无论多么好，最好在几十年内就会过时。人们可能会在脚注中提到你的软件，但没有人会真正使用它。事实上，它看起来会是非常软弱的工作。只有对领域历史有感觉的人才会意识到，在它的时代，它是好的。

曾经有一段时间，计算机实验室里有一些多余的施乐蒲公英。任何想要一个玩的人都可以有一个。我短暂地动心了，但按照现在标准，它们太慢了；有什么意义？也没有人想要一个，所以它们就走了。这就是系统工作的结果。

我不想只是构建东西，我想构建会持久的东西。

在这种不满的状态下，我于1988年去卡内基梅隆大学拜访了在那里读研究生的Rich Draves。有一天，我去参观了卡内基研究所，我小时候在那里度过了很多时间。在看那里的一幅画时，我意识到了一些事情，这可能看起来很明显，但对我来说是一个大惊喜。在墙上，有一些东西你可以制作，它会持续下去。画作不会过时。其中一些最好的画作有数百年的历史。

而且，这是你可以谋生的东西。不像写软件那么容易，当然，但我认为，如果你真的勤奋并且生活得非常便宜，那肯定是可能的。而且作为艺术家，你可以真正独立。你不会有老板，甚至不需要获得研究资金。

我一直喜欢观看画作。我能制作它们吗？我不知道。我从来没有想过这甚至是可能的。我凭智力知道人们制作艺术——它不是自发产生的——但好像制作它的人是另一种物种。他们要么生活在很久以前，要么是神秘的天才，在《生活》杂志的侧写中做着奇怪的事情。实际上能够制作艺术，将那个动词放在那个名词之前，似乎几乎是奇迹。

那年秋天，我开始在哈佛大学上艺术课。研究生可以在任何系上课，我的导师Tom Cheatham非常随和。如果他知道我在上什么奇怪的课程，他从来没有说过什么。

所以现在我是计算机科学博士项目中的一员，却计划成为一名艺术家，同时也真正喜欢Lisp黑客，并且正在努力写《论Lisp》。换句话说，像许多研究生一样，我正在努力进行多个项目，这些项目不是我的论文。

我不知道如何摆脱这种局面。我不想退出研究生院，但我要怎样才能出来呢？我记得当我的朋友Robert Morris因编写1988年的互联网蠕虫被康奈尔大学开除时，我羡慕他找到了如此壮观的方式退出研究生院。

然后，在1990年4月的一天，墙上出现了裂缝。我偶然遇到了教授Cheatham，他问我是否已经足够进步，可以在那年六月毕业。我连我的论文一个字都没写，但在我一生中一定是最快的思考中，我决定尝试在截止日期前剩下的大约五周内写一篇，尽可能地重用《论Lisp》的部分，我能够毫不迟疑地回答，“是的，我想是的。我过几天就给你点东西看。”

我选择了连续性的应用程序作为主题。回想起来，我应该写关于宏和嵌入式语言的。那里有一个整个世界几乎没有被探索过。但我所想要的只是摆脱研究生院，我迅速写成的论文勉强足够了。

与此同时，我正在申请艺术学校。我申请了两个：美国的RISD和佛罗伦萨的Accademia di Belli Arti，因为它是最古老的艺术学校，我想象它会很好。RISD接受了我，我从来没有从Accademia那里听到回复，所以我去了普罗维登斯。

我申请了RISD的BFA课程，这实际上意味着我不得不再次上大学。这并不像听起来那么奇怪，因为我只有25岁，艺术学校里充满了不同年龄的人。RISD把我算作转学二年级生，并说我必须在那个夏天做基础工作。基础课程意味着每个人都必须上的基础知识课程，比如绘画、色彩和设计。

快到夏末时，我得到了一个很大的惊喜：一封来自Accademia的信，因为它被错误地送到了英国剑桥而不是马萨诸塞州的剑桥，邀请我在那个秋天参加佛罗伦萨的入学考试。现在只剩下几周的时间了。我好心的女房东让我把我的东西留在她的阁楼上。我在研究生院期间通过咨询工作存了一些钱；如果我生活节俭的话，可能足够一年的生活了。现在我所要做的就是学习意大利语。

只有stranieri（外国人）必须参加这次入学考试。回想起来，这很可能是一种排除他们的方式，因为有很多stranieri被在佛罗伦萨学习艺术的想法所吸引，否则意大利学生将会被数量压倒。我在那个夏天的RISD基础课程中在绘画和绘画方面处于不错的状态，但我仍然不知道我是如何通过笔试的。我记得我通过写关于塞尚的文章来回答作文问题，并且我尽可能地提高知识水平，以充分利用我有限的词汇量。[2]

我只有25岁，但已经有这样的明显模式。在这里，我又一次即将参加一些庄严的机构，希望学习一些有声望的科目，但又一次即将感到失望。Accademia绘画系的学生和教职员工是你所能想象的最可爱的人，但他们早已达成了一种安排，即学生不需要教职员工教任何东西，作为回报，教职员工也不需要学生学任何东西。同时，所有参与者都会公开坚持19世纪工作室的传统。我们实际上有一个你在19世纪工作室画作中看到的那样的小炉子，用木柴喂养，还有一个裸体模特尽可能地坐在它旁边而不被烧伤。除了我几乎没有其他人画她。其他学生把时间花在聊天上，或者偶尔试图模仿他们在美国艺术杂志上看到的东西。

我们的模特原来就住在我住的街道下面。她通过结合模特和为当地古董商制造赝品来谋生。她会从一本书中复制一幅不知名的旧画，然后他会接过副本并虐待它，使其看起来老旧。[3]

当我在Accademia学习时，我晚上开始在我的卧室里画静物。这些画很小，因为房间很小，因为我是在我当时买得起的剩余的画布碎片上画的。画静物与画人不同，因为它的名字表明，主题不能移动。人们不能一次坐超过大约15分钟，当他们这样做时，他们不会坐得很安静。所以画人的传统的方法是知道如何画一个通用的人，然后你将其修改以匹配你正在画的特定人。而静物，如果你愿意，你可以从你所看到的逐像素复制。当然，你不想在那里停下来，否则你只会得到摄影般的精确度，而使静物有趣的是它已经过大脑。你想强调视觉线索，告诉你，例如，颜色在某个点突然变化的原因是因为它是一个物体的边缘。通过微妙地强调这类事情，你可以制作出比照片更真实的画作，这不仅仅是在某种比喻意义上，而且在严格的信息论意义上。[4]

我喜欢画静物，因为我对我所看到的感到好奇。在日常生活中，我们并没有意识到我们所看到的大部分。大多数视觉感知是由低级过程处理的，这些过程仅仅告诉你的大脑“那是一滴水珠”，而不告诉你最轻和最暗的点在哪里，或者“那是一丛灌木”，而不告诉你每片叶子的形状和位置。这是大脑的一个特征，而不是一个错误。在日常生活中，注意到每丛灌木上的每片叶子会分散注意力。但是当你不得不画一些东西时，你必须更仔细地看，当你这样做时，有很多可看的东西。即使在几天试图画一些人们通常认为理所当然的东西之后，你仍然可以注意到新的东西，就像在几天试图写一篇关于人们通常认为理所当然的东西的文章之后一样。

这并不是唯一的绘画方式。我不确定它是否甚至是一种好的绘画方式。但它似乎足够值得尝试。

我们的老师，Ulivi教授，是个好人。他能看出我工作努力，并给了我一个好成绩，他把它写在每个学生都有的那种护照上。但Accademia除了意大利语之外并没有教我任何东西，而且我的钱快用完了，所以在第一年结束时我回到了美国。

我想回到RISD，但我现在一文不名，而且RISD非常昂贵，所以我决定先找份工作干一年，然后在下一个秋天回到RISD。我在一家名为Interleaf的公司找到了一份工作，这家公司生产创建文档的软件。你的意思是像微软Word那样的软件？没错。那就是我了解到低端软件往往会吞噬高端软件。但Interleaf仍然有几年的寿命。[5]

Interleaf做了一些相当大胆的事情。受到Emacs的启发，他们增加了一种脚本语言，甚至使脚本语言成为Lisp的一种方言。现在他们想要一个Lisp黑客来用它写东西。这是我有过的最接近正常工作的事情，我在此向我的老板和同事道歉，因为我是一个糟糕的员工。他们的Lisp是在一个巨大的C蛋糕上最薄的糖霜，由于我不知道C并且不想学它，所以我从来没有理解过大部分软件。另外，我非常不负责任。这还是一个编程工作意味着每天在特定的工作时间出现的时候。对我来说这似乎不自然，在这方面，世界其他地方正在逐渐接受我的想法，但在当时它引起了许多摩擦。在那一年的年底，我花了很多时间秘密地从事《论Lisp》的工作，到那时我已经得到了出版合同。

好的部分是我得到了一大笔钱，特别是按照艺术学生的标准。在佛罗伦萨，在支付了我的一部分租金之后，我的其他所有预算是每天7美元。现在我每小时得到的报酬是我在会议上仅仅坐着就能得到的4倍以上。通过节俭的生活，我不仅设法节省了足够的钱回到RISD，还还清了我的大学贷款。

我在Interleaf学到了一些有用的东西，尽管它们大多是关于不该做什么的。我了解到，科技公司最好由产品人员而不是销售人员来管理（尽管销售是一种真正的技能，擅长它的人真的很擅长），当代码被太多人编辑时会导致错误，便宜的办公空间如果令人沮丧就不是便宜货，计划中的会议不如走廊对话，庞大、官僚的客户是一个危险的资金来源，传统的办公时间和最佳黑客时间之间没有太多重叠，传统的办公室和最佳黑客地点之间也没有太多重叠。

但我学到的最重要的东西，我在Viaweb和Y Combinator中都使用过的，是低端吞噬高端：成为“入门级”选项是好的，尽管这将不那么有声望，因为如果你不是，其他人会是，并且会把你压在天花板上。这反过来又意味着声望是一个危险信号。

当我在下一个秋天离开回到RISD时，我安排为该小组做自由职业工作，该小组为客户做项目，这就是我在未来几年中的生存方式。当我后来回来进行一个项目访问时，有人向我介绍了一个叫做HTML的新东西，正如他描述的那样，它是SGML的一个衍生物。标记语言爱好者在Interleaf是一种职业危害，我忽略了他，但这个HTML后来成为了我生活的一个重要部分。

1992年秋天，我搬回普罗维登斯继续在RISD学习。基础课程只是介绍性的东西，Accademia不过是一个（非常文明的）笑话。现在我要看看真正的艺术学校是什么样子。但遗憾的是，它与Accademia没有太大的不同。组织得更好，当然，也更贵，但现在越来越清楚的是，艺术学校与艺术的关系并不像医学院与医学的关系那样。至少绘画系不是这样。我的隔壁邻居所在的纺织系似乎相当严格。插画和建筑无疑也是如此。但绘画是后严格的。绘画学生应该表达自己，这对更世俗的人来说意味着尝试制定某种独特的签名风格。

签名风格在视觉上相当于演艺界所称的“噱头”：一种立即识别作品是你的而不是别人的的东西。例如，当你看到一幅看起来像某种卡通的画时，你知道它是由罗伊·利希滕斯坦（Roy Lichtenstein）画的。所以如果你看到一幅这种类型的大画挂在对冲基金经理的公寓里，你知道他为此支付了数百万美元。艺术家拥有签名风格并不总是因为这个原因，但买家通常会为这样的作品支付很多钱。[6]

也有很多认真的学生：在高中“会画画”的孩子，现在来到了这个被认为是全国最好的艺术学校，想学得更好。他们在RISD发现的东西让他们感到困惑和沮丧，但他们继续前进，因为绘画是他们所做的事情。我不是那种在高中就会画画的孩子，但在RISD我肯定更接近他们的部落，而不是那些寻找签名风格的人的部落。

我在RISD上的色彩课中学到了很多，但除此之外，我基本上是在自学绘画，我可以免费这样做。所以在1993年我退学了。我在普罗维登斯闲逛了一会儿，然后我的大学朋友南希·帕梅特（Nancy Parmet）帮了我一个大忙。她母亲在纽约拥有的一栋建筑中的租金控制公寓即将空置。我想要吗？它不比我目前的地方贵多少，而且纽约应该是艺术家们所在的地方。所以，是的，我想要！

阿斯特克斯漫画一开始就放大到罗马高卢的一个很小的角落，结果发现不是由罗马人控制的。你可以在纽约市的地图上做类似的事情：如果你放大到上东区，有一个很小的角落并不富裕，或者至少在1993年不是。它被称为约克维尔，那是我的新家。现在我是一个纽约艺术家——在制作绘画和生活在纽约的技术意义上。

我对金钱感到紧张，因为我可以感觉到Interleaf正在走下坡路。自由职业的Lisp黑客工作非常罕见，我不想用另一种语言编程，如果我很幸运的话，那将意味着C++。所以我凭借我对财务机会的敏锐嗅觉，决定写另一本关于Lisp的书。这将是一本受欢迎的书，可以作为教科书的那种书。我想象自己节俭地生活，靠版税生活，把所有时间都用来画画。（这本书封面上的绘画，ANSI Common Lisp，是我在这段时间画的。）

对我来说，纽约最好的事情是Idelle和Julian Weber的存在。Idelle Weber是一位画家，是早期的照相写实主义者之一，我在哈佛上过她的绘画课。我从未认识过一个比她更受学生爱戴的老师。大量的前学生与她保持联系，包括我。搬到纽约后，我成了她事实上的工作室助手。

她喜欢在大的方形画布上作画，每边4到5英尺。1994年底的某一天，当我正在拉伸其中一个怪物时，收音机里有一些关于一位著名基金经理的事情。他只比我大一点，而且非常富有。我突然想到：为什么我不能变得富有？那么我就能够做任何我想做的事情。

与此同时，我越来越多地听说这个新事物——万维网。Robert Morris在剑桥向我展示了它，他现在在哈佛读研究生。对我来说，网络将成为一件大事。我已经看到了图形用户界面对微型计算机普及的影响。看来网络将为互联网做同样的事情。

如果我想变得富有，这里是离开车站的下一趟火车。这部分我是对的。我搞错的是想法。我决定我们应该创办一家公司，将艺术画廊放到网上。我不能诚实地说，在阅读了如此多的Y Combinator申请之后，这是有史以来最糟糕的创业想法，但它是其中之一。艺术画廊不想上网，现在仍然不想，至少那些高档的不想。那不是他们的销售方式。我写了一些软件来为画廊生成网站，Robert写了一些来调整图像大小并设置一个http服务器来提供页面。然后我们试图签约画廊。说这是一个困难的销售将会是轻描淡写。免费赠送都很困难。一些画廊让我们免费为他们制作网站，但没有人付我们钱。

然后一些在线商店开始出现，我意识到除了订单按钮之外，它们与我们为画廊生成的网站完全相同。这个听起来令人印象深刻的所谓“互联网商店”是我们已经知道如何构建的东西。

所以，在1995年夏天，在我把ANSI Common Lisp的相机就绪副本提交给出版商后，我们开始尝试编写构建在线商店的软件。起初这将是正常的桌面软件，这在那些日子里意味着Windows软件。这是一个令人震惊的前景，因为我们俩都不知道如何编写Windows软件，也不想学。我们生活在Unix世界。但我们决定至少尝试在Unix上编写一个原型商店构建器。Robert写了一个购物车，我为商店写了一个新网站生成器——当然是用Lisp。

我们是在剑桥的Robert的公寓里工作。他的室友会离开很长一段时间，在这段时间里我可以睡在他的房间里。出于某种原因，那里没有床架或床单，只是地板上的床垫。一天早上，当我躺在这个床垫上时，我有一个想法让我像大写字母L一样坐起来。如果我们在服务器上运行软件，并让用户通过点击链接来控制它呢？那么我们就永远不必编写任何运行在用户计算机上的软件了。我们可以在我们将提供它们的同一个服务器上生成网站。用户不需要任何比浏览器更多的东西。

这种类型的软件，被称为Web应用程序，现在很常见，但在那时还不清楚它是否甚至可能。为了找出答案，我们决定尝试制作一个你可以通过浏览器控制的商店构建器版本。几天后，在我们有了8月12日的一个。用户界面很糟糕，但它证明了你可以通过浏览器构建整个商店，而不需要任何客户端软件或在服务器上键入任何命令行。

现在我们觉得我们真的找到了什么。我幻想着一代全新的软件将以这种方式工作。你不需要版本，或者端口，或者任何那种垃圾。在Interleaf有一个叫做Release Engineering的团队，似乎至少和实际编写软件的团队一样大。现在你可以直接在服务器上更新软件了。

我们开始了一家名为Viaweb的新公司，因为我们的软件通过Web工作，我们从Idelle的丈夫Julian那里获得了10,000美元的种子资金。作为回报，他做了最初的法律工作，给了我们商业建议，我们给了他公司10%的股份。十年后，这笔交易成为了Y Combinator的模式。我们知道创始人需要像我们自己一样的东西。

在这个阶段，我的净资产是负数，因为我在银行里的大约一千美元远远不能抵消我欠政府的税款。（我是否勤奋地为Interleaf咨询所赚取的钱预留了适当的比例？不，我没有。）所以尽管Robert有他的研究生津贴，我需要那些种子资金来维持生活。

我们原本希望在9月推出，但随着我们对软件的工作，我们对软件的雄心壮志越来越大。最终，我们设法构建了一个所见即所得的网站构建器，因为你在创建页面时，它们看起来和后来生成的静态页面完全一样，只不过链接不是指向静态页面，而是指向存储在服务器上的哈希表中的闭包。

学习艺术有助于此，因为在线商店构建器的主要目标是让用户看起来合法，看起来合法的关键是高生产价值。如果你得到页面布局和字体和颜色正确，你可以使一个从他的卧室里经营商店的家伙看起来比一个大公司更合法。

（如果你好奇为什么我的网站看起来这么过时，那是因为它仍然是用这个软件制作的。今天它可能看起来笨重，但在1996年它是时髦的代名词。）

9月，Robert反叛了。“我们已经在这个上面工作了一个月，”他说，“它仍然没有完成。”回想起来这很有趣，因为他几乎在三年后仍在工作。但我决定可能谨慎的做法是招募更多的程序员，我问Robert在研究生院里还有谁是真正优秀的。他推荐了Trevor Blackwell，这让我一开始感到惊讶，因为那时我主要知道Trevor是因为他计划将他生活中的一切简化为一叠卡片，他随身携带着。但Rtm通常是对的。Trevor结果是一个非常有效的黑客。

和Robert和Trevor一起工作很有趣。他们是我所知道的两个最有独立思考能力的人，并且完全不同。如果你能看到Rtm的大脑里面，它看起来就像一个殖民地新英格兰教堂，如果你能看到Trevor的大脑里面，它看起来就像奥地利洛可可的最坏过度。

我们在1996年1月以6家商店开业。我们等几个月是件好事，因为尽管我们担心我们晚了，但实际上我们几乎过早地致命。当时媒体上有很多关于电子商务的讨论，但实际上并没有多少人真正想要在线商店。[8]

软件有三个主要部分：编辑器，人们用来构建网站，我写的，购物车，Robert写的，以及经理，负责跟踪订单和统计信息，Trevor写的。在它的时代，编辑器是最好的通用网站构建器之一。我保持代码紧凑，不必与任何其他软件集成，除了Robert和Trevor的，所以它非常有趣。如果我所要做的就是在这个软件上工作，接下来的三年将是我一生中最轻松的。不幸的是，我不得不做更多，所有这些都是我比编程更糟糕的事情，接下来的三年反而成为压力最大的。

90年代后半期有很多初创公司在制作电子商务软件。我们决心成为Microsoft Word，而不是Interleaf。这意味着易于使用且价格低廉。我们很幸运，因为我们很穷，因为这使我们让Viaweb比我们意识到的更便宜。我们为一家小商店每月收费100美元，为一家大商店每月收费300美元。这个低价格是一个很大的吸引力，并且一直是竞争对手的肉中刺，但它并不是因为我们有某种聪明的洞察力而设定了低价格。我们不知道企业为事情支付什么。对我们来说，每月300美元似乎是很多钱。

我们偶然做了很多正确的事情。例如，我们做了现在所谓的“做不可扩展的事情”，尽管当时我们会描述为“我们如此无能，以至于我们被迫采取最绝望的措施来获得用户。”其中最常见的是为他们构建商店。这似乎特别羞辱，因为我们软件的全部存在理由是人们可以使用它来制作自己的商店。但任何事情都是为了获得用户。

我们学到了很多我们不想知道的零售知识。例如，如果你只能有一张男士衬衫的小图片（按照现在的标准，所有的图片都很小），最好有一张领子的特写而不是整件衬衫的图片。我记得学到这一点是因为这意味着我不得不重新扫描大约30张男士衬衫的图片。我第一批扫描的图片也是如此美丽。

尽管这感觉不对，但这正是应该做的事情。为用户构建商店教会了我们零售业，以及使用我们软件的感觉。最初我对“商业”感到困惑和排斥，认为我们需要一个“商业人士”来负责它，但一旦我们开始获得用户，我就被转变了，在我有孩子后成为父亲的方式上也是如此。无论用户想要什么，我都全力以赴。也许有一天我们会有如此多的用户，以至于我无法为他们扫描图片，但在那之前没有比这更重要的事情要做。

当时我没有意识到的另一件事是增长率是创业公司的最终考验。我们的增长率很好。我们在1996年底有大约70家商店，在1997年底有大约500家。我错误地认为重要的是用户的数量。从某种意义上说，这是重要的，因为这就是你赚钱的方式，如果你赚的不够，你可能会倒闭。但从长远来看，增长率会照顾到绝对数量。如果我们是我在Y Combinator建议的创业公司，我会说：不要这么紧张，因为你做得很好。你一年增长7倍。只是不要雇佣太多的人，你很快就会盈利，然后你将掌控自己的命运。

可惜我雇佣了更多的人，部分是因为我们的投资者希望我这么做，部分是因为在互联网泡沫期间创业公司就是这么做的。一个只有少数员工的公司看起来会很业余。所以我们直到大约1998年夏天雅虎收购我们时才达到收支平衡。这反过来意味着我们在整个公司的生活中都受制于投资者。由于我们和我们的投资者都是创业公司的新手，结果即使是按照创业公司的标准来看也是一团糟。

当雅虎收购我们时，这是一种巨大的解脱。原则上我们的Viaweb股票很有价值。它是一份业务的股份，这项业务是盈利的，并且正在迅速增长。但它对我来说并没有感觉到很有价值；我不知道如何评估一家企业，但我非常清楚地意识到我们似乎每个月都有一次濒死经历。自从我们开始以来，我也没有显著改变我的研究生生活方式。所以当雅虎收购我们时，感觉就像是从破布到财富。由于我们要去加利福尼亚，我买了一辆车，一辆黄色的1998年VW GTI。我记得当时认为它的皮革座椅是我拥有的最豪华的东西。

从1998年夏天到1999年夏天的下一年，一定是我生命中最没有生产力的一年。我当时没有意识到，但我因经营Viaweb的努力和压力而筋疲力尽。在加利福尼亚的一段时间里，我试图继续我通常的凌晨3点编程的习惯，但疲劳加上雅虎过早老化的文化和圣克拉拉沉闷的立方体农场逐渐把我拖垮了。几个月后，感觉就像是在Interleaf工作一样令人不安。

雅虎在收购我们时给了我们很多选择。当时我认为雅虎被高估了，它们永远不会有价值，但令我惊讶的是，股票在接下来的一年里上涨了5倍。我坚持到第一批期权归属，然后在1999年夏天我离开了。自从我画任何东西以来已经有很长时间了，我已经半忘了我为什么要这么做。我的大脑在过去4年里完全充满了软件和男式衬衫。但我这么做是为了变得富有，这样我就可以画画，我提醒自己，现在我富有了，所以我应该去画画。

当我说我要走的时候，我在雅虎的老板和我进行了长时间的对话，讨论我的计划。我告诉他所有我想画的画的种类。当时我很感动，他这么关心我。现在我意识到这是因为他认为我在撒谎。我那时的期权每月价值约200万美元。如果我留下这么多钱，那一定是为了去创办一些新的创业公司，如果我这样做了，我可能会带走一些人。这是互联网泡沫的顶峰，雅虎是它的中心。我的老板那一刻是个亿万富翁。在那时离开去创办一家新创业公司一定对他来说似乎是一个疯狂但也有可能的雄心勃勃的计划。

但我确实辞职去画画，我立即开始了。没有时间可以浪费了。我已经花了4年时间变得富有。现在当我和出售公司后离开的创始人交谈时，我的建议总是一样的：去度假。这正是我应该做的，去某个地方一两个月什么都不做，但我从未想到过。

所以我尝试画画，但我似乎没有任何能量或野心。部分问题是我在加利福尼亚不认识很多人。我通过在圣克鲁斯山区买了一所房子使这个问题更加复杂，那里的视野很美，但离任何地方都很远。我坚持了几个月，然后在绝望中我回到了纽约，除非你了解租金管制，否则你会惊讶地听到我仍然有我的公寓，它被密封得像我旧生活的坟墓一样。Idelle至少在纽约，那里还有其他人试图画画，尽管我一个也不认识。

当我回到纽约时，我恢复了我的旧生活，只是现在我富有了。这就像听起来一样奇怪。我恢复了我所有的旧模式，只是现在有了一些以前没有的门。现在当我厌倦了走路，我所要做的就是举手，（除非下雨）一辆出租车会停下来接我。现在当我走过迷人的小餐馆时，我可以进去点午餐。这令人兴奋了一会儿。绘画开始变得更好。我尝试了一种新类型的静物画，我会用旧的方式画一幅画，然后拍照并打印出来，放大，在帆布上，然后用它作为第二幅静物画的底漆，从相同的物体（希望还没有腐烂）上画。

与此同时，我寻找要购买的公寓。现在我实际上可以选择居住的社区。我问自己和各种房地产经纪人，纽约的剑桥在哪里？在偶尔访问真正的剑桥的帮助下，我逐渐意识到没有。呵呵。

大约在2000年春天，我有一个主意。从我们与Viaweb的经验中很明显，Web应用程序是未来。为什么不为制作Web应用程序构建一个Web应用程序呢？为什么不让人们通过浏览器在我们的服务器上编辑代码，然后为他们托管生成的应用程序呢？[9] 你可以在服务器上运行各种服务，这些应用程序只需通过API调用来使用：拨打和接听电话、操纵图像、接受信用卡支付等。

我对这个想法感到非常兴奋，以至于我无法思考其他任何事情。这似乎是显而易见的，这是未来。我并不特别想创办另一家公司，但这似乎必须体现为一家公司，所以我决定搬到剑桥并创办它。我希望引诱Robert和我一起工作，但那里我遇到了一个障碍。Robert现在在麻省理工学院做博士后，尽管他上次被我引诱参与我的计划赚了很多钱，但这也是一次巨大的时间消耗。所以虽然他认为这听起来像是一个合理的想法，但他坚决拒绝参与。

哼。好吧，那我就自己来做。我招募了为Viaweb工作过的Dan Giffin，以及两个想要暑期工作本科生，我们开始尝试构建现在很清楚是大约二十家公司和几个开源项目价值的软件。定义应用程序的语言当然将是一种Lisp方言。但我并不那么天真，以至于认为我可以在普通观众面前突然冒出一个公开的Lisp；我们会隐藏括号，就像Dylan一样。

到那时，已经有了一种公司Viaweb的名称，称为“应用服务提供商”或ASP。这个名字在被“软件即服务”取代之前并没有持续很长时间，但它足够流行，以至于我以它命名了这家新公司：它将被称为Aspra。

我开始制作应用程序构建器，Dan从事网络基础设施工作，两个本科生从事前两项服务（图像和电话）。但在夏天大约一半的时候，我意识到我真的不想经营一家公司——尤其是大公司，看起来这将是必要的。我之所以创办Viaweb只是因为我需要钱。现在我已经不需要钱了，我为什么要这么做？如果这个愿景必须体现为一家公司，那么去它的愿景。我会构建一个可以作为开源项目完成的子集。

让我感到惊讶的是，我花在这些东西上的时间并没有白费。在我们开始Y Combinator之后，我经常遇到从事这种新架构部分工作的初创公司，花这么多时间思考它甚至尝试编写其中一些是非常有用的。

我将作为开源项目构建的子集是新的Lisp，现在我甚至不需要隐藏括号。许多Lisp黑客梦想构建一个新的Lisp，部分原因是该语言的一个显著特点是它有方言，部分原因是，我认为，我们心中有一个柏拉图式的Lisp形式，所有现有的方言都没有达到。我当然有。所以在夏天结束时，Dan和我转而研究这种新的Lisp方言，我称之为Arc，在我在剑桥买的房子里。

第二年春天，闪电击中了。我被邀请在一次Lisp会议上发表演讲，所以我做了一个关于我们在Viaweb如何使用Lisp的演讲。之后，我把这个演讲的Postscript文件放到了网上，在paulgraham.com上，这是我多年前使用Viaweb创建的，但从未用于任何东西。在一天之内，它获得了30,000次页面浏览。到底发生了什么？引用的URL显示有人在Slashdot上发布了它。[10]

哇，我想，有观众。如果我写一些东西并把它放到网上，任何人都可以阅读它。这现在可能看起来很明显，但当时很令人惊讶。在印刷时代，通往读者的渠道非常狭窄，由被称为编辑的凶猛怪物守卫。让你写的东西有观众的唯一方法是将其作为书籍、报纸或杂志出版。现在任何人都可以出版任何东西。

自1993年以来，这在原则上就已经是可能的，但当时没有多少人意识到这一点。我与构建网络基础设施密切相关，并且是一位作家，而我花了8年时间才意识到这一点。即使那样，我也花了几年时间才理解其含义。这意味着将会有一代全新的散文。[11]

在印刷时代，出版散文的渠道非常小。除了少数在纽约参加正确派对的官方指定思想家之外，唯一被允许出版散文的人是专家撰写关于他们专业的文章。有如此多的散文从未被写过，因为没有办法出版它们现在可以了，我将开始写作。[12]

我从事过几种不同的工作，但如果说有一个转折点，我确定了要从事什么工作，那就是当我开始在网上发表文章时。从那时起，我知道无论我做什么，我都会写文章。

我知道网上的文章一开始会是一个边缘媒介。社会上它们似乎更像是疯子在他们的GeoCities网站上发布的长篇大论，而不是在《纽约客》上发表的文雅且精美排版的作品。但在这一点上，我已经足够了解，发现这是鼓舞人心的，而不是令人气馁的。

我生活中注意到的一个最显著的模式是，对我来说，从事不那么有声望的工作有多好。静物画一直是最不受欢迎的绘画形式。Viaweb和Y Combinator在开始时似乎都很糟糕。当人们问我在写什么，我解释说我将在网站上发表一篇文章时，我仍然会看到陌生人的茫然眼神。即使是Lisp，尽管在智力上很有声望，就像拉丁语一样，看起来也不太时髦。

这并不是说不那么有声望的工作本质上是好的。但当你发现自己被某种工作吸引，尽管它目前缺乏声望时，这是一个迹象，表明那里有一些真实的东西可以发现，而且你有正确的动机。不纯的动机对于有抱负的人来说是一个巨大的危险。如果有什么东西会让你误入歧途，那就是给人留下深刻印象的欲望。所以，虽然从事不那么有声望的工作并不能保证你走的是正确的轨道，但至少保证你不会走上最常见的错误轨道。

在接下来的几年里，我写了很多关于各种不同主题的文章。O'Reilly将其中的一些文章结集出版成书，书名为《黑客与画家》，以其中一篇文章的名字命名。我还研究了垃圾邮件过滤器，并做了更多的绘画。我过去每周四晚上都会为一群朋友举行晚宴，这让我学会了为团队做饭。我在剑桥又买了一栋建筑，以前是糖果厂（后来据说是色情工作室），用作办公室。

2003年10月的一个晚上，我家举行了一个大型派对。这是我的朋友Maria Daniels的一个巧妙主意，她是周四晚宴的常客。三位不同的主人将邀请他们的朋友参加一个派对。所以对于每位客人来说，其他三分之二的客人是他们不认识但可能会喜欢的人。其中一位客人是我不认识但最终非常喜欢的人：一个叫Jessica Livingston的女人。几天后我约她出去。

Jessica在波士顿一家投资银行负责市场营销。这家银行认为它了解创业公司，但随着她在接下来的一年里遇到了我来自创业世界的朋友们，她惊讶地发现现实是多么不同。他们的故事是多么丰富多彩。所以她决定编写一本采访创业公司创始人的书。

当银行遇到财务问题，她不得不解雇一半员工时，她开始寻找新工作。2005年初，她在波士顿一家风险投资公司面试了一个市场营销职位。他们花了数周时间做决定，在此期间，我开始告诉她关于风险资本需要修复的所有事情。他们应该进行更多较小的投资，而不是少数巨大的投资，他们应该资助更年轻、更懂技术的人，而不是MBA，他们应该让创始人继续担任CEO，等等。

我写文章的一个技巧一直是做演讲。必须站在一群人面前，告诉他们一些不会浪费他们时间的事情，这是激发想象力的绝佳动力。当哈佛计算机协会，本科生计算机俱乐部，邀请我做演讲时，我决定告诉他们如何创办一家创业公司。也许他们能够避免我们犯过的最糟糕的错误。

所以我做了这个演讲，在演讲过程中，我告诉他们最好的种子资金来源是成功的创业公司创始人，因为他们也会成为建议的来源。然后他们似乎都在期待地看着我。我害怕我的收件箱被商业计划淹没（如果我当时知道的话），我脱口而出“但我除外！”然后继续我的演讲。但之后我意识到我应该停止拖延天使投资。自从雅虎收购我们以来，我一直打算这样做，现在已经过去7年了，我还没有做过一次天使投资。

与此同时，我一直在和Robert和Trevor密谋我们可以一起做的项目。我错过了和他们一起工作的日子，看来一定有我们可以合作的事情。

Jessica和我3月11日从晚餐回家时，在花园和Walker街的拐角处，这三个线索汇聚在一起。去他的VC，他们花了这么长时间才做出决定。我们将创办自己的投资公司，真正实施我们一直在讨论的想法。我会资助它，Jessica可以辞去工作并为其工作，我们也会得到Robert和Trevor作为合作伙伴。[13]

再次，无知对我们有利。我们不知道如何成为天使投资者，2005年在波士顿没有Ron Conways可以学习。所以我们只是做了看起来明显的选择，我们做的一些事情后来证明是新颖的。

YC有多个组成部分，我们并没有立即全部弄清楚。我们首先理解的部分是成为一个天使公司。在那些日子里，这两个词不会放在一起。有VC公司，它们是有组织的公司，有专职人员进行投资，但他们只做大的、百万美元的投资。还有天使，他们做较小的投资，但这些通常是专注于其他事情并在一边进行投资的个人。他们都没有在开始时给予创始人足够的帮助。我们知道创始人在某些方面是多么无助，因为我们记得我们自己是多么无助。例如，Julian为我们做过的一件事，对我们来说就像魔法一样，就是让我们成立了公司。我们可以很好地编写相当复杂的软件，但实际上成立公司，有章程和股票等所有这些东西，你到底是怎么做的？我们的计划不仅仅是进行种子投资，而是为初创公司做Julian为我们做过的所有事情。

YC并没有组织成一个基金。它足够便宜，我们可以用我们自己的钱来资助它。99%的读者都没有意识到这一点，但专业投资者会想“哇，这意味着他们得到了所有的回报。”但再次，这不是因为我们有任何特别的洞察力。我们不知道VC公司是如何组织的。我们从来没有想过要筹集一个基金，如果它有，我们也不知道从哪里开始。[14]

YC最独特的是批量模型：一次资助一大批初创公司，每年两次，然后花三个月的时间集中精力帮助它们。这部分我们是由于我们对投资的无知而偶然发现的，不仅仅是隐含的，而且是明确的。我们需要获得作为投资者的经验。我们认为，最好的方式是一次资助一大批初创公司？我们知道本科生在夏天会去科技公司做临时工作。为什么不组织一个暑期项目，让他们开始创业呢？我们不会为成为假投资者而感到内疚，因为他们在类似的意义上也会是假创始人。所以虽然我们可能从中赚不到多少钱，但至少我们可以在他们身上练习成为投资者，而他们至少会有一个比在微软工作更有趣的夏天。

我们将使用我在剑桥拥有的建筑作为我们的总部。我们每周都会在那里吃一次晚餐——每周二，因为我已经在每周四为每周四的晚餐者做饭——晚餐后我们会请来初创公司的专家来做讲座。

我们知道本科生那时正在决定暑期工作，所以在几天之内我们就制定了一个我们称之为暑期创始人计划的东西，我在我的网站上发布了一个公告，邀请本科生申请。我从来没有想过写文章会成为获得“交易流”的方式，但事实证明这是完美的来源。[15]我们收到了225份暑期创始人计划的申请，我们惊讶地发现其中很多申请者已经毕业，或者那年春天即将毕业。这个SFP项目已经开始比我们预期的更严肃了。

我们邀请了大约225个小组中的20个来面试，从中我们选择了8个来资助。他们是一个令人印象深刻的团队。第一批包括reddit，Justin Kan和Emmett Shear，他们继续创立了Twitch，Aaron Swartz，他已经帮助编写了RSS规范，几年后将成为开放获取的烈士，还有Sam Altman，他后来成为YC的第二任总裁。我认为第一批如此出色并不完全是运气。你必须非常大胆才能报名参加像暑期创始人计划这样的奇怪事情，而不是在微软或高盛这样合法的地方做暑期工作。

初创公司的交易是基于我们与Julian（1万美元10%）的交易和Robert所说的麻省理工学院研究生在夏天得到的东西（6千美元）的结合。我们每位创始人投资6千美元，在典型的两位创始人的情况下是1.2万美元，以换取6%。那一定是公平的，因为它是我们自己所接受的交易的两倍好。另外，在那个非常炎热的第一个夏天，Jessica为创始人们带来了免费的空调。[16]

很快我就意识到我们偶然发现了扩大创业公司融资的方法。批量资助初创公司对我们来说更方便，因为我们可以在一次为很多初创公司做事，但成为一批的一部分对初创公司也更好。它解决了创始人面临的最大问题之一：孤立。现在你不仅有同事，而且有理解你面临的问题并可以告诉你他们如何解决这些问题的同事。

随着YC的成长，我们开始注意到规模的其他优势。校友成为一个紧密的社区，致力于互相帮助，尤其是当前一批，他们记得自己曾经的位置。我们还注意到，初创公司正在成为彼此的客户。我们过去常常开玩笑地提到“YC GDP”，但随着YC的成长，这变得越来越不像是一个笑话。现在，很多初创公司几乎完全从他们的同批同学中获得他们最初的一批客户。

我最初并没有打算让YC成为一份全职工作。我打算做三件事：黑客，写文章，和在YC工作。随着YC的成长，我对它的兴奋，它开始占据我越来越多的注意力。但在最初的几年里，我仍然能够从事其他事情。

2006年夏天，Robert和我开始了一个新的Arc版本。这个版本相当快，因为它被编译成了Scheme。为了测试这个新的Arc，我用它写了Hacker News。它最初是为创业公司创始人准备的新闻聚合器，被称为Startup News，但几个月后，我厌倦了只阅读有关创业公司的内容。再说，我们想要接触的不是创业公司创始人。是未来的创业公司创始人。所以我把名字改成了Hacker News，主题变成了任何能激发你智力好奇心的东西。

HN无疑对YC有好处，但它也是我最大的压力来源。如果我所要做的就是选择和帮助创始人，生活将会很轻松。这意味着HN是一个错误。一个人的工作中最大的压力来源至少应该是接近核心的工作。而我就像个在跑马拉松时感到疼痛的人，不是因为跑步的努力，而是因为我有一只不合脚的鞋子磨出的水泡。当我在YC处理一些紧急问题时，大约有60%的可能性与HN有关，40%的可能性与其他所有事情有关。[17]

除了HN，我还用Arc编写了YC的所有内部软件。但我继续在Arc上做了很多工作，我逐渐停止了对Arc的工作，部分是因为我没有时间，部分是因为现在我们有这么多依赖它的基础设施，再搞乱这种语言已经不太吸引人了。所以现在我的三个项目减少到了两个：写文章和在YC工作。

YC与其他我做过的工作不同。不是由我自己决定做什么工作，问题来找我。每6个月就有一批新的初创公司，他们的问题，无论他们是什么，变成了我们的问题。这是非常吸引人的工作，因为他们的问题相当多样，好的创始人非常有效。如果你想在尽可能短的时间内了解尽可能多的关于初创公司的信息，你不能选择更好的方法来做。

工作中有些部分我不喜欢。联合创始人之间的纠纷，弄清楚人们何时对我们撒谎，与虐待初创公司的人斗争，等等。但我即使在我不喜欢的部分也努力工作。我被Kevin Hale曾经说过的关于公司的一句话所困扰：“没有人比老板更努力工作。”他既是描述性的，也是规范性的，第二部分让我害怕。我希望YC很好，所以如果我工作的努力程度设定了其他人工作努力程度的上限，我最好非常努力地工作。

2010年的一天，Robert Morris在加利福尼亚州进行面试时做了一件令人惊讶的事情：他主动给了我建议。我只记得他以前这么做过一次。有一天在Viaweb，当时我因肾结石痛得弯下腰来，他建议他带我去医院是个好主意。这就是Rtm提出主动建议所要付出的代价。所以我非常清楚地记得他的确切话语。“你知道，”他说，“你应该确保Y Combinator不是你做的最后一件酷事。”

当时我不明白他的意思，但渐渐地我明白了，他在说我应该辞职。这似乎是个奇怪的建议，因为YC做得很好。但如果有一件事比Rtm提出建议更罕见，那就是Rtm错了。所以这让我思考。的确，按照我目前的轨迹，YC将是我做的最后一件事，因为它只会占据我越来越多的注意力。它已经吞噬了Arc，并且正在吞噬文章。要么YC是我一生的工作，要么我最终必须离开。而它不是，所以我将会。

2012年夏天，我母亲中风了，结果是由结肠癌引起的血块。中风摧毁了她的平衡，她被送进了疗养院，但她真的想离开那里回到她的房子，我和我妹妹决心帮助她做到这一点。我曾经定期飞往俄勒冈州看望她，我在那些航班上有很多思考的时间。在其中的一次航班上，我意识到我已经准备好将YC交给别人了。

我问Jessica是否想成为总裁，但她不想，所以我们决定尝试招募Sam Altman。我们和Robert和Trevor谈了谈，我们同意彻底改变警卫。到目前为止，YC一直是由我们四个人开始的原始LLC控制的。但我们希望YC能够持续很长时间，要做到这一点，它不能由创始人控制。所以如果Sam同意，我们会让他重组YC。Robert和我将退休，Jessica和Trevor将成为普通合伙人。

当我们问Sam是否想成为YC的总裁时，他最初说不。他想创办一家制造核反应堆的创业公司。但我坚持不懈，到2013年10月他终于同意了。我们决定他将从2014年冬季开始接管。2013年剩下的时间我越来越多地将YC的运营留给Sam，部分是为了让他学习工作，部分是因为我专注于我的母亲，她的癌症又复发了。

她于2014年1月15日去世。我们知道这一天会来，但当它到来时仍然很艰难。

我一直工作到三月，以帮助那一批初创公司度过Demo Day，然后我就完全退出了。（我仍然和校友以及对我很感兴趣的新初创公司交谈，但这只需要每周几个小时。）

我接下来应该做什么？Rtm的建议没有包括任何关于那方面的内容。我想做一些完全不同的事情，所以我决定画画。我想知道如果我真正专注于它我能变得多好。所以我停止在YC工作的第二天，我就开始画画了。我很生疏，需要一段时间才能恢复状态，但这至少是完全吸引人的。[18]

我花了2014年的大部分时间在画画上。我以前从未如此不间断地工作过，我变得比以前更好了。还不够好，但是更好。然后在11月，在一幅画的中间，我失去了动力。直到那时，我总是好奇我正在画的画会是什么样子，但突然之间完成这一幅看起来像是一项杂务。所以我停止了它的工作，清理了我的画笔，从那时起就没有画画。到目前为止。

我知道这听起来很软弱。但是注意力是一种零和游戏。如果你可以选择工作的内容，而你选择的项目对你来说不是最好的（或至少是好的）项目，那么它就会阻碍另一个项目。而在50岁的时候，胡闹是有一些机会成本的。

我又开始写文章了，在接下来的几个月里写了很多新的文章。我甚至写了一些不是关于初创公司的文章。然后在2015年3月，我又开始研究Lisp。

Lisp的独特之处在于它的核心是通过编写自身的解释器来定义的语言。它最初并不是作为普通意义上的编程语言而设计的。它打算成为一种计算的正式模型，图灵机的替代品。如果你想用自身语言编写一种语言的解释器，你需要的最少一组预定义的操作符是什么？John McCarthy发明的Lisp，或者更准确地说，发现的Lisp，就是这个问题的答案。[19]

McCarthy没有意识到这个Lisp甚至可以用来编程计算机，直到他的研究生Steve Russell提出。Russell将McCarthy的解释器翻译成了IBM 704机器语言，从那时起Lisp也开始成为一种普通的编程语言。但它作为计算模型的起源赋予了它一种力量和优雅，其他语言无法比拟。这在大学时吸引了我，尽管当时我不明白为什么。

McCarthy的1960 Lisp只解释Lisp表达式。它缺少你在编程语言中想要的很多东西。所以这些东西必须添加，当它们被添加时，它们并没有使用McCarthy最初的公理化方法来定义。当时这是不可能的。McCarthy通过手工模拟程序的执行来测试他的解释器。但它已经接近于你可以通过这种方式测试的解释器的极限了——事实上，它有一个McCarthy忽视的错误。要测试一个更复杂的解释器，你必须运行它，当时的计算机还不够强大。

现在它们是强大的。现在你可以继续使用McCarthy的公理化方法，直到你定义了一个完整的编程语言。只要你对McCarthy的Lisp所做的每一个改变都是一个发现性保持的转换，原则上你可以最终得到一个具有这种品质的完整语言。这比谈论起来要难得多，但如果原则上是可能的，为什么不试试呢？所以我决定尝试一下。它花了4年的时间，从2015年3月26日到2019年10月12日。幸运的是，我有一个明确的目标，否则很难坚持这么久。

我用Arc在自身中编写了这个新的Lisp，叫做Bel。这听起来可能像是一个矛盾，但它表明了我要让它工作所必须进行的那种诡计。通过一系列令人发指的黑客攻击，我设法制作了一个足够接近于用自身编写的解释器，实际上可以运行。不是很快，但足够快，可以测试。

我不得不在这段时间的大部分时间里禁止自己写文章，否则我永远也完成不了。2015年底，我花了3个月的时间写文章，当我回到工作在Bel上时，我几乎无法理解代码。与其说是因为写得不好，不如说是因为问题太复杂了。当你在编写一个用自身编写的解释器时，很难追踪在哪个层次上发生了什么，而且错误在你得到它们时几乎是加密的。

所以我说我在Bel完成之前不会再写文章了。但我在工作时很少向人们提及Bel。所以在那些年里，一定看起来我什么都没做，而实际上我比以往任何时候都更努力地工作。偶尔在与一些可怕的错误搏斗了几个小时之后，我会查看Twitter或HN，看到有人问“Paul Graham还在编码吗？”

从事Bel的工作是艰难但令人满意的。我如此集中精力地工作，以至于在任何给定的时间我都有相当一部分代码在我的脑海中，并且可以在那里编写更多。我记得2015年的一个阳光明媚的日子，我带孩子们去海边，一边看着他们在潮汐池中玩耍，一边想出了如何处理涉及连续性的一些问题。这感觉就像是我正在正确地生活。我记得那是因为我对这种新颖的感觉感到有点失望。好消息是，在接下来的几年里，我有了更多这样的时刻。

2016年夏天，我们搬到了英格兰。我们希望我们的孩子体验一下生活在另一个国家的感觉，而且由于我出生时是英国公民，这似乎是显而易见的选择。我们本来只打算待一年，但我们非常喜欢那里，所以我们仍然住在那里。所以大部分的Bel是在英格兰写的。

2019年秋天，Bel终于完成了。像McCarthy最初的Lisp一样，它是一个规范而不是一个实现，尽管像McCarthy的Lisp一样，它是一个用代码表达的规范。

现在我可以再次写文章了，我写了很多关于我堆积起来的主题的文章。我在2020年全年都在写文章，但我也开始思考我可以从事的其他事情。我该如何选择做什么？那么，我过去是如何选择要从事的工作的呢？我为自己写了一篇文章来回答这个问题，我对答案的长度和混乱程度感到惊讶。如果这让我自己感到惊讶，那么我想对其他人来说可能也很有趣，并且对于那些生活同样混乱的人来说是令人鼓舞的。所以我为其他人写了一篇更详细的版本，这是它的最后一句话。

感谢Trevor Blackwell、John Collison、Patrick Collison、Daniel Gackle、Ralph Hazell、Jessica Livingston、Robert Morris和Harj Taggar阅读了这篇文章的草稿。

[1] 我的经历跳过了计算机演变的一个步骤：具有交互式操作系统的分时共享机器。我直接从批处理过渡到了微型计算机，这使得微型计算机显得更加令人兴奋。

[2] 意大利语中抽象概念的词汇几乎总能从它们对应的英语词汇中预测出来（除了偶尔的陷阱，比如“polluzione”）。日常词汇则不同。所以如果你将许多抽象概念与一些简单的动词串在一起，你可以让一点点意大利语走得很远。

[3] 我住在圣费利切广场4号，所以我去学院的路线直穿古老佛罗伦萨的脊梁：经过皮蒂宫，穿过桥梁，经过奥桑米凯莱，位于圆顶和洗礼堂之间，然后沿着里卡索利街走到圣马可广场。我从街道层面看到了佛罗伦萨在各种可能的条件下的样子，从空荡荡的黑暗的冬夜到挤满游客的炎热夏日。

[4] 当然，如果你想的话，你也可以像画静物一样画人，如果他们愿意的话。那种肖像可以说是静物画的顶峰，尽管长时间的坐姿往往会让被画者的表情显得痛苦。

[5] Interleaf是许多拥有聪明人和建造了令人印象深刻的技术的公司之一，然而却被摩尔定律压垮了。在1990年代，商品（即Intel）处理器能力的指数级增长像推土机一样席卷了高端、特殊用途的硬件和软件公司。

[6] RISD上寻找签名风格的学生并不是特别的唯利是图。在艺术界，金钱和酷是紧密联系在一起的。任何昂贵的东西都会被视为酷，任何被视为酷的东西很快就会变得同样昂贵。

[7] 严格来说，公寓不是租金管制的，而是租金稳定的，但这只有纽约人会知道或关心的细节。关键是它非常便宜，不到市场价格的一半。

[8] 你可以在大多数软件完成后立即启动。但是当软件是一个在线商店构建器，并且你托管商店时，如果你还没有用户，这个事实就会非常明显。所以在我们能够公开启动之前，我们不得不私下启动，招募一批初始用户，并确保他们有看起来不错的商店。

[9] 我们在Viaweb有一个代码编辑器，供用户定义自己的页面样式。他们不知道，在下面他们正在编辑Lisp表达式。但这不是一个应用程序编辑器，因为代码在商家的网站生成时运行，而不是在购物者访问时。

[10] 这是现在熟悉的经历的第一个实例，接下来发生的事情也是如此，当我阅读评论时，发现它们充满了愤怒的人。我怎么能声称Lisp比其他语言更好？它们不都是图灵完备的吗？有时人们会告诉我，他们为我感到抱歉，因为我写的论文回应，但我并不夸张，当我回答说一直都是这样，从最开始就是这样。这是领域的一部分。一篇文章必须告诉读者他们不知道的事情，有些人不喜欢被告知这样的事情。

[11] 当然，在90年代人们确实把很多东西放在互联网上，但把东西放在网上和在网上发布是不同的。在网上发布意味着你把在线版本视为（或至少是一个）主要版本。

[12] 这里有一个普遍的教训，我们与Y Combinator的经历也教导了我们：习俗在你不再受到造成它们的限制之后，还会继续约束你很长时间。风险投资的习俗曾经像关于写文章的习俗一样，是基于真正的限制。创业公司曾经要昂贵得多，而且相应地罕见。现在它们可以便宜且普遍，但风险投资的习俗仍然反映了旧世界，就像写文章的习俗仍然反映了印刷时代的限制一样。

这反过来意味着，独立思考的人（即受习俗影响较小的人）将在受快速变化影响的领域（习俗更有可能过时的地方）拥有优势。

然而，这里有一点有趣的是：你并不总能预测哪些领域会受到快速变化的影响。显然，软件和风险投资会这样，但谁会预料到写文章也会这样呢？

[13] Y Combinator并不是最初的名字。起初我们被称为剑桥种子。但我们不想有一个地区性的名字，以防有人在硅谷复制我们，所以我们以lambda演算中最酷的技巧之一，Y组合子，重新命名了我们自己。

我选择橙色作为我们的颜色，部分是因为它是最温暖的颜色，部分是因为没有风险投资使用它。在2005年，所有的风险投资都使用像栗色、海军蓝和森林绿这样的稳定颜色，因为他们试图吸引有限合伙人，而不是创始人。YC标志本身是一个内部笑话：Viaweb的标志是一个白色V在一个红色圆圈上，所以我把YC标志做成了一个白色Y在一个橙色方块上。

[14] YC在2009年开始的几年里确实成为了一个基金，因为它变得如此之大，我再也负担不起个人资助了。但在Heroku被收购后，我们有足够的钱回到自筹资金。

[15] 我从来都不喜欢“交易流”这个词，因为它暗示了任何给定时间新创业公司的数量是固定的。这不仅是不正确的，而且YC的目的就是证明它是错误的，通过创建本来不会存在的创业公司。

[16] 她报告说，它们都是不同的形状和大小，因为空调机缺货，她不得不拿到任何她能得到的东西，但它们现在都比她能搬得动的要重。

[17] HN的另一个问题是当你既写文章又运行论坛时出现的奇怪的边缘情况。当你运行一个论坛时，你被假定至少会看到每一段涉及你的对话。而当你写文章时，人们会在论坛上发布极具想象力的误解。单独来看，这两种现象都是乏味但可以忍受的，但它们的结合是灾难性的。你实际上必须回应误解，因为假设你在对话中存在意味着不回应任何足够上票的误解会被理解为默认它是正确的。但这反过来又鼓励了更多的人；任何想找你麻烦的人都感觉到现在是他们的机会。

[18] 离开YC最糟糕的事情就是不能再和Jessica一起工作了。我们几乎从认识开始就一直在YC工作，我们既没有尝试过也不想将它与我们的个人生活分开，所以离开就像拔起一棵根深蒂固的树。

[19] 要更精确地理解发明与发现的概念，有一种方法是谈论太空外星人。任何足够先进的外星文明肯定都知道毕达哥拉斯定理，例如。我相信，虽然不那么确定，他们也会知道McCarthy 1960年论文中的Lisp。

但如果是这样，就没有理由认为这是他们可能知道的这种语言的极限。想必外星人也需要数字、错误和输入/输出。所以似乎很可能至少有一条从McCarthy的Lisp出发的路径，在这条路径上，发现性得以保持。







